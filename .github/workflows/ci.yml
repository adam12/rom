---
name: ci
'on':
  push:
    paths:
    - ".github/workflows/ci.yml"
    - lib/**
    - "*.gemspec"
    - spec/**
    - Rakefile
    - Gemfile
    - Gemfile.devtools
    - ".rubocop.yml"
    - project.yml
  pull_request:
    branches:
    - master
  create:
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby:
        - '2.7'
        - '2.6'
        - '2.5'
        - '2.4'
        - jruby
        - truffleruby
        include:
        - ruby: '2.6'
          coverage: 'true'
        - runtime_deps: rom-sql-latest
          use_rom_sql_master: 'false'
        - runtime_deps: rom-sql-master
          use_rom_sql_master: 'true'
        - runtime_deps: dry-transformer-latest
          use_dry_transformer_master: 'false'
        - runtime_deps: dry-transformer-master
          use_dry_transformer_master: 'true'
        runtime_deps:
        - rom-sql-latest
        - rom-sql-master
        - dry-transformer-latest
        - dry-transformer-master
    env:
      CLASSPATH: ''
      COVERAGE: "${{matrix.coverage}}"
      CODACY_RUN_LOCAL: "${{matrix.coverage}}"
      CODACY_PROJECT_TOKEN: "${{secrets.CODACY_PROJECT_TOKEN}}"
      BASE_DB_URI: localhost/rom_repository
      USE_DRY_TRANSFORMER_MASTER: "${{matrix.use_dry_transformer_master}}"
      USE_ROM_SQL_MASTER: "${{matrix.use_rom_sql_master}}"
      APT_DEPS: libpq-dev libsqlite3-dev
    steps:
    - uses: actions/checkout@v1
    - name: Install package dependencies
      run: "[ -e $APT_DEPS ] || sudo apt-get install -y --no-install-recommends $APT_DEPS"
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: "${{matrix.ruby}}"
    - name: Install latest bundler
      run: |
        gem install bundler --no-document
        bundle config set without 'tools benchmarks docs'
    - name: Bundle install
      run: bundle install --jobs 4 --retry 3
    - name: Run all tests
      run: bundle exec rake
    - name: Send coverage results
      if: matrix.coverage == 'true'
      run: codacy_final_reporter
    services:
      db:
        image: postgres:10.8
        env:
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: ''
          POSTGRES_DB: rom_repository
        ports:
        - 5432:5432
        options: "--health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5"
  release:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags') && github.event_name == 'create'
    needs: tests
    env:
      GITHUB_LOGIN: rom-bot
      GITHUB_TOKEN: "${{secrets.GH_PAT}}"
    steps:
    - uses: actions/checkout@v1
    - name: Install package dependencies
      run: "[ -e $APT_DEPS ] || sudo apt-get install -y --no-install-recommends $APT_DEPS"
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - name: Install dependencies
      run: gem install ossy --no-document
    - name: Trigger release workflow
      run: |
        tag=$(echo $GITHUB_REF | cut -d / -f 3)
        ossy gh w rom-rb/devtools release --payload "{\"tag\":\"$tag\",\"tag_creator\":\"$GITHUB_ACTOR\",\"repo\":\"$GITHUB_REPOSITORY\"}"
